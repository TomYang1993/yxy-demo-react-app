{"version":3,"sources":["libs/userContext.js","libs/onError.js","containers/Home.js","containers/NotFound.js","sharedComponents/LoaderButton.js","libs/useFormFields.js","containers/Login.js","containers/Signup.js","config.js","libs/s3Uploads.js","containers/NewNote.js","containers/Notes.js","sharedComponents/BillingForm.js","containers/Settings.js","sharedComponents/AuthenticatedRoute.js","sharedComponents/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","onError","error","message","toString","Error","alert","Home","useState","notes","setNotes","isAuthenticated","isLoading","setIsLoading","loadNotes","API","get","useEffect","a","console","log","onLoad","className","ListGroup","concat","map","note","i","key","noteid","to","Item","style","fontSize","fontWeight","content","trim","split","Date","createdAt","toLocaleString","renderNotesList","NotFound","LoaderButton","disabled","props","Button","children","useFormFields","initialState","fields","setValues","event","target","id","value","Login","userHasAuthenticated","email","password","handleFieldChange","preventDefault","Auth","signIn","onSubmit","Form","Group","controlId","bsSize","Label","Control","autoFocus","type","onChange","block","length","Signup","confirmPassword","confirmationCode","history","useHistory","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","push","Text","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","s3Upload","file","filename","now","name","Storage","vault","put","contentType","stored","s3Delete","remove","NewNote","useRef","setContent","current","size","config","attachment","createNote","post","body","as","e","files","bsStyle","Notes","str","useParams","setNote","isDeleting","setIsDeleting","saveNote","deleteNote","del","window","confirm","loadNote","attachmentURL","rows","defaultValue","replace","plaintext","readOnly","variant","onClick","injectStripe","storage","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","stripe","createToken","token","min","placeholder","complete","Settings","billUser","details","setStripe","source","Stripe","AuthenticatedRoute","rest","useLocation","pathname","search","UnauthenticatedRoute","redirect","url","location","href","regex","RegExp","results","exec","decodeURIComponent","querystring","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","signOut","currentSession","Navbar","collapseOnSelect","Brand","process","Toggle","Collapse","Nav","Link","Provider","Boolean","hostname","match","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.304967e4.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","export function onError(error) {\n    let message = error.toString();\n  \n    // Auth errors\n    if (!(error instanceof Error) && error.message) {\n      message = error.message;\n    }\n  \n    alert(message);\n  }","import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../libs/userContext\";\nimport { onError } from \"../libs/onError\";\nimport \"./Home.css\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { API } from \"aws-amplify\";\n\n\nexport default function Home() {\n  const [notes, setNotes] = useState([]);\n  const { isAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!isAuthenticated) {\n        return;\n      }\n  \n      try {\n        const notes = await loadNotes();\n        console.log(notes)\n        setNotes(notes);\n      } catch (e) {\n        onError(e);\n      }\n  \n      setIsLoading(false);\n    }\n  \n    onLoad();\n  }, [isAuthenticated]);\n  \n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n\n  function renderNotesList(notes) {\n    return [{}].concat(notes).map((note, i) =>\n    i !== 0 ? (\n      <LinkContainer key={note.noteid} to={`/notes/${note.noteid}`}>\n        <ListGroup.Item>\n          <div style={{fontSize: 20, fontWeight: 600}}>{note.content.trim().split(\"\\n\")[0]}</div> \n          <div style={{fontSize: 14, fontWeight: 300}}>{\"Created: \" + new Date(note.createdAt).toLocaleString()}</div>\n        </ListGroup.Item>\n      </LinkContainer>\n    ) : (\n      <LinkContainer key=\"new\" to=\"/notes/new\">\n        <ListGroup.Item>\n          <h4>\n            <b>{\"\\uFF0B\"}</b> Create a new note\n          </h4>\n        </ListGroup.Item>\n      </LinkContainer>\n    )\n  );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Fountain Pen</h1>\n        <p>A simple note taking app, try signup!</p>\n      </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <h2>Your Notes</h2>\n        <ListGroup>\n          {!isLoading && renderNotesList(notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\n\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className,\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      className={`LoaderButton ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading && <BsArrowRepeat className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport LoaderButton from \"../sharedComponents/LoaderButton\";\nimport Form from 'react-bootstrap/Form'\nimport \"./Login.css\";\nimport { Auth } from \"aws-amplify\";\nimport { useAppContext } from \"../libs/userContext\";\nimport { useFormFields } from \"../libs/useFormFields\";\n\n\nexport default function Login() {\n    const { userHasAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(false);\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\"\n      });\n\n\n    function validateForm() {\n        return fields.email.length > 0 && fields.password.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        try {\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n        } catch (e) {\n            alert(e.message);\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"Login\">\n            <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" bsSize=\"large\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" bsSize=\"large\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                        type=\"password\"\n                    />\n                </Form.Group>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Login\n                </LoaderButton>\n            </form>\n        </div>\n    );\n}","\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport LoaderButton from \"../sharedComponents/LoaderButton\";\nimport { useAppContext } from \"../libs/userContext\";\nimport { useFormFields } from \"../libs/useFormFields\";\nimport \"./Signup.css\";\nimport { onError } from \"../libs/onError\"\nimport { Auth } from \"aws-amplify\"\n\nexport default function Signup() {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        confirmationCode: \"\",\n    });\n    const history = useHistory();\n    const [newUser, setNewUser] = useState(null);\n    const { userHasAuthenticated } = useAppContext();\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm() {\n        return (\n            fields.email.length > 0 &&\n            fields.password.length > 0 &&\n            fields.password === fields.confirmPassword\n        );\n    }\n\n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password,\n            });\n            setIsLoading(false);\n            setNewUser(newUser);\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n\n            userHasAuthenticated(true);\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function renderConfirmationForm() {\n        return (\n            <form onSubmit={handleConfirmationSubmit}>\n                <Form.Group controlId=\"confirmationCode\" bsSize=\"large\">\n                    <Form.Label>Confirmation Code</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"tel\"\n                        onChange={handleFieldChange}\n                        value={fields.confirmationCode}\n                    />\n                    <Form.Text>Please check your email for the code.</Form.Text>\n                </Form.Group>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    isLoading={isLoading}\n                    disabled={!validateConfirmationForm()}\n                >\n                    Verify\n          </LoaderButton>\n            </form>\n        );\n    }\n\n    function renderForm() {\n        return (\n            <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" bsSize=\"large\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" bsSize=\"large\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\" bsSize=\"large\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        onChange={handleFieldChange}\n                        value={fields.confirmPassword}\n                    />\n                </Form.Group>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Signup\n          </LoaderButton>\n            </form>\n        );\n    }\n\n    return (\n        <div className=\"Signup\">\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    );\n}","export default {\n    s3: {\n      REGION: \"us-east-2\",\n      BUCKET: \"yxy-demo-app-uploads\"\n    },\n    apiGateway: {\n      REGION: \"us-east-2\",\n      URL: \"https://95ej56d2pg.execute-api.us-east-2.amazonaws.com/dev\"\n    },\n    cognito: {\n      REGION: \"us-east-2\",\n      USER_POOL_ID: \"us-east-2_IGqy1TPui\",\n      APP_CLIENT_ID: \"7d2nthvclm8eva7bf217a9fm81\",\n      IDENTITY_POOL_ID: \"us-east-2:0b301fca-b4e2-454f-a0d9-b47c35ab6ee1\"\n    },\n    MAX_ATTACHMENT_SIZE: 5000000,\n    STRIPE_KEY: \"pk_test_KXjxOOoRECc5p251UYT0Vfbe00byICxzbx\"\n  };","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type,\n  });\n\n  return stored.key;\n}\n\nexport async function s3Delete(filename) {\n\n  const stored = await Storage.vault.remove(filename);\n\n  return stored.key;\n}","import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport LoaderButton from \"../sharedComponents/LoaderButton\";\nimport { onError } from \"../libs/onError\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\nimport { API } from \"aws-amplify\";\nimport { s3Upload } from \"../libs/s3Uploads\";\n\nexport default function NewNote() {\n    const file = useRef(null);\n    const history = useHistory();\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    function validateForm() {\n        return content.length > 0;\n    }\n\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n                1000000} MB.`\n            );\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n            const attachment = file.current ? await s3Upload(file.current) : null;\n\n            await createNote({ content, attachment });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function createNote(note) {\n        return API.post(\"notes\", \"/notes\", {\n            body: note\n        });\n    }\n\n    return (\n        <div className=\"NewNote\">\n            <form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"content\">\n                    <Form.Control\n                        value={content}\n                        as=\"textarea\"\n                        onChange={e => setContent(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"file\">\n                    <Form.Label>Attachment</Form.Label>\n                    <Form.Control onChange={handleFileChange} type=\"file\" />\n                </Form.Group>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    bsStyle=\"primary\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Create\n        </LoaderButton>\n            </form>\n        </div>\n    );\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/onError\";\nimport Form from 'react-bootstrap/Form'\nimport LoaderButton from \"../sharedComponents/LoaderButton\";\nimport config from \"../config\";\nimport { s3Upload, s3Delete } from \"../libs/s3Uploads\";\n\nexport default function Notes() {\n    const file = useRef(null);\n    const { id } = useParams();\n    const history = useHistory();\n    const [note, setNote] = useState(null);\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n    useEffect(() => {\n        function loadNote() {\n            return API.get(\"notes\", `/notes/${id}`);\n        }\n\n        async function onLoad() {\n            try {\n                const note = await loadNote();\n                const { content, attachment } = note;\n\n                if (attachment) {\n                    note.attachmentURL = await Storage.vault.get(attachment);\n                }\n\n                setContent(content);\n                setNote(note);\n            } catch (e) {\n                onError(e);\n            }\n        }\n\n        onLoad();\n    }, [id]);\n\n    function validateForm() {\n        return content.length > 0;\n    }\n\n    function formatFilename(str) {\n        return str.replace(/^\\w+-/, \"\");\n    }\n\n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n    }\n\n    function saveNote(note) {\n        return API.put(\"notes\", `/notes/${id}`, {\n            body: note\n        });\n    }\n\n    async function handleSubmit(event) {\n        let attachment;\n\n        event.preventDefault();\n\n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${\n                config.MAX_ATTACHMENT_SIZE / 1000000\n                } MB.`\n            );\n            return;\n        }\n\n        setIsLoading(true);\n\n        try {\n\n\n            if (file.current) {\n                console.log(note.attachment)\n                await s3Delete(note.attachment);\n                attachment = await s3Upload(file.current);\n            }\n\n            await saveNote({\n                content,\n                attachment: attachment || note.attachment\n            });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function deleteNote() {\n        return API.del(\"notes\", `/notes/${id}`);\n    }\n\n    async function handleDelete(event) {\n        event.preventDefault();\n\n        const confirmed = window.confirm(\n            \"Are you sure you want to delete this note?\"\n        );\n\n        if (!confirmed) {\n            return;\n        }\n\n        setIsDeleting(true);\n\n        try {\n            await deleteNote();\n            await s3Delete(note.attachment);\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsDeleting(false);\n        }\n    }\n\n    return (\n        <div className=\"Notes\">\n            {note && (\n                <form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"content\">\n                        <Form.Control\n                            value={content}\n                            as=\"textarea\"\n                            rows=\"10\"\n                            onChange={e => setContent(e.target.value)}\n                        />\n                    </Form.Group>\n                    {note.attachment && (\n                        <Form.Group>\n                            <Form.Label>Attachment</Form.Label>\n                            <Form.Control defaultValue={formatFilename(note.attachment)} plaintext readOnly />\n                            {/* <a target=\"_blank\" rel=\"noopener noreferrer\" href={note.attachmentURL}>\n                                    {}\n                                </a> */}\n                        </Form.Group>\n                    )}\n                    <Form.Group controlId=\"file\">\n                        {!note.attachment && <Form.Label>Attachment</Form.Label>}\n                        <Form.Control onChange={handleFileChange} type=\"file\" />\n                    </Form.Group>\n                    <LoaderButton\n                        block\n                        type=\"submit\"\n                        variant=\"primary\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                    >\n                        Save\n          </LoaderButton>\n                    <LoaderButton\n                        block\n                        variant=\"danger\"\n                        onClick={handleDelete}\n                        isLoading={isDeleting}\n                    >\n                        Delete\n          </LoaderButton>\n                </form>\n            )}\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport LoaderButton from \"./LoaderButton\";\nimport { useFormFields } from \"../libs/useFormFields\";\nimport \"./BillingForm.css\";\n\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\n  const [fields, handleFieldChange] = useFormFields({\n    name: \"\",\n    storage: \"\"\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCardComplete, setIsCardComplete] = useState(false);\n\n  isLoading = isProcessing || isLoading;\n\n  function validateForm() {\n    return (\n      fields.name !== \"\" &&\n      fields.storage !== \"\" &&\n      isCardComplete\n    );\n  }\n\n  async function handleSubmitClick(event) {\n    event.preventDefault();\n\n    setIsProcessing(true);\n\n    const { token, error } = await props.stripe.createToken({ name: fields.name });\n\n    setIsProcessing(false);\n\n    onSubmit(fields.storage, { token, error });\n  }\n\n  return (\n    <form className=\"BillingForm\" onSubmit={handleSubmitClick}>\n      <Form.Group controlId=\"storage\">\n        <Form.Label>Storage</Form.Label>\n        <Form.Control\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </Form.Group>\n      <hr />\n      <Form.Group controlId=\"name\">\n        <Form.Label>Cardholder&apos;s name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </Form.Group>\n      <Form.Label>Credit Card Info</Form.Label>\n      <CardElement\n        className=\"card-field\"\n        onChange={e => setIsCardComplete(e.complete)}\n      />\n      <LoaderButton\n        block\n        type=\"submit\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </form>\n  );\n}\n\nexport default injectStripe(BillingForm);","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/onError\";\nimport config from \"../config\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../sharedComponents/BillingForm\";\nimport \"./Settings.css\";\n\nexport default function Settings() {\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n\n    function billUser(details) {\n        return API.post(\"notes\", \"/billing\", {\n            body: details\n        });\n    }\n\n    const [stripe, setStripe] = useState(null);\n\n    useEffect(() => {\n        setStripe(window.Stripe(config.STRIPE_KEY));\n    }, []);\n\n    async function handleFormSubmit(storage, { token, error }) {\n        if (error) {\n          onError(error);\n          return;\n        }\n      \n        setIsLoading(true);\n      \n        try {\n          await billUser({\n            storage,\n            source: token.id\n          });\n      \n          alert(\"Your card has been charged successfully!\");\n          history.push(\"/\");\n        } catch (e) {\n          onError(e);\n          setIsLoading(false);\n        }\n      }\n      \n\n      return (\n        <div className=\"Settings\">\n          <StripeProvider stripe={stripe}>\n            <Elements>\n              <BillingForm isLoading={isLoading} onSubmit={handleFormSubmit} />\n            </Elements>\n          </StripeProvider>\n        </div>\n      );\n}","import React from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/userContext\";\n\nexport default function AuthenticatedRoute({ children, ...rest }) {\n  const { pathname, search } = useLocation();\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={\n          `/login?redirect=${pathname}${search}`\n        } />\n      )}\n    </Route>\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/userContext\";\n\nexport default function UnauthenticatedRoute({ children, ...rest }) {\n  const { isAuthenticated } = useAppContext();\n  const redirect = querystring(\"redirect\");\n\n  return (\n    <Route {...rest}>\n      {!isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\n      )}\n    </Route>\n  );\n}\n\nfunction querystring(name, url = window.location.href) {\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n  \n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n    const results = regex.exec(url);\n  \n    if (!results) {\n      return null;\n    }\n    if (!results[2]) {\n      return \"\";\n    }\n  \n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Notes from \"./containers/Notes\";\nimport Settings from \"./containers/Settings\"\nimport AuthenticatedRoute from \"./sharedComponents/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./sharedComponents/UnauthenticatedRoute\";\n\nexport default function Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <UnauthenticatedRoute exact path=\"/login\">\n                    <Login />\n                </UnauthenticatedRoute>\n                <UnauthenticatedRoute exact path=\"/signup\">\n                    <Signup />\n                </UnauthenticatedRoute>\n                <AuthenticatedRoute exact path=\"/settings\">\n                    <Settings />\n                </AuthenticatedRoute>\n\n                <AuthenticatedRoute exact path=\"/notes/new\">\n                    <NewNote />\n                </AuthenticatedRoute>\n\n                <AuthenticatedRoute exact path=\"/notes/:id\">\n                    <Notes />\n                </AuthenticatedRoute>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { AppContext } from \"./libs/userContext\";\nimport { Auth } from \"aws-amplify\";\nimport { onError } from \"./libs/onError\"\n\nfunction App() {\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const history = useHistory();\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch (e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  return (\n    !isAuthenticating && <div className=\"App container\">\n      <Navbar collapseOnSelect>\n        <Navbar.Brand>\n          <Link to={process.env.PUBLIC_URL + '/'}>Fountain Pen Notes</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav>\n            {isAuthenticated\n              ? <>\n                <LinkContainer to=\"/settings\">\n                  <Nav.Link>Settings</Nav.Link>\n                </LinkContainer>\n                <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n              </>\n              : <>\n                <LinkContainer to=\"/signup\">\n                  <Nav.Link>Signup</Nav.Link>\n                </LinkContainer>\n                <LinkContainer to=\"/yxy-demo-react-app/login\">\n                  <Nav.Link>Login</Nav.Link>\n                </LinkContainer>\n              </>\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        <Routes />\n      </AppContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}